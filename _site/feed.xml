<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ninjacn's blog</title>
    <description></description>
    <link>http://ninjacn.com</link>
    <atom:link href="http://ninjacn.com/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>bind结合nginx+php实现dns服务器url跳转</title>
        <description>
          
          概述 AUTOMATION FOR EVERYONE,这是官方对Ansbile的定位。看字面意思应该很明确了，它就是为了完成系统各种自动化而服务。用它部署应用、管理各类系统，帮助运维人员简化很多复杂场景，提高工作效率。Ansible有收费版和开源版本，我一直用开源的，能满足现在的需求。用ansbile也没几个月，之前用puppet,salt，不能说都比这些好，但ansible的优点还是很多的，不然也不至于redhat会收购吧。 &amp;lt;?php /** * @author ninjacn &amp;lt;x@ninjacn.com&amp;gt; * 根据获取到的主机名获取相应TXT记录,并返回相应信息 */ define('TARGET_SHOW', 0); //显示url define('TARGET_HIDE', 1); //隐藏url $hostname = $_SERVER['HTTP_HOST']; $record = dns_get_record($hostname, DNS_TXT); list($type, $url) = array('', ''); if($record) { if(isset($record[0]['txt'])) { list($type, $url) = explode('|', $record[0]['txt']); } } if(empty($type) &amp;amp;&amp;amp; empty($url)) { exit(110); } if($type ==...
        </description>
        <pubDate>Thu, 28 Jul 2016 00:00:00 +0800</pubDate>
        <link>http://ninjacn.com/2016-07-28-bind-E7-BB-93-E5-90-88nginx-2Bphp-E5-AE-9E-E7-8E-B0dns-E6-9C-8D-E5-8A-A1-E5-99-A8url-E8-B7-B3-E8-BD-AC</link>
        <guid isPermaLink="true">http://ninjacn.com/2016-07-28-bind-E7-BB-93-E5-90-88nginx-2Bphp-E5-AE-9E-E7-8E-B0dns-E6-9C-8D-E5-8A-A1-E5-99-A8url-E8-B7-B3-E8-BD-AC</guid>
      </item>
    
      <item>
        <title>ansible入门</title>
        <description>
          简要介绍ansible - 
          概述 AUTOMATION FOR EVERYONE,这是官方对Ansbile的定位。看字面意思应该很明确了，它就是为了完成系统各种自动化而服务。用它部署应用、管理各类系统，帮助运维人员简化很多复杂场景，提高工作效率。Ansible有收费版和开源版本，我一直用开源的，能满足现在的需求。用ansbile也没几个月，之前用puppet,salt，不能说都比这些好，但ansible的优点还是很多的，不然也不至于redhat会收购吧。 进入正题 使用场景 配置管理。从系统初始化完成到正式上线，我们会将指定机器角色定义好，比如是proxy(负载均衡)还是web服务器，这不限于是单台机器或多台机器。单台机器可以承担多个角色，比如我们将dns角色和web服务器角色共同应用于某台机器，以达到机器复用的目的。 实时执行命令-Ad hoc。Ansible有好多模块支持命令行操作，比如copy,shell等。 优点 没有客户端，命令通过ssh通道执行。一般情况下加key认证简单方便。像Puppet和salt C/S架构，如果master有故障会很麻烦，但Ansible不会，只需要将私钥保持好，可以在任意机器执行命令。 Python语言编写。很多运维人员都用python,也喜欢用python写的开源软件，这点大家应该都懂的。 安装 mac可以直接用brew brew install ansible CentOS安装可以用yum,需要安装EPEL yum源 yum install ansible KEY认证 1.在中控机（控制所有机器的主机）生成key,以root用户操作,demo如下： [root@web01 app]# ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key (/root/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same...
        </description>
        <pubDate>Mon, 18 Jan 2016 00:00:00 +0800</pubDate>
        <link>http://ninjacn.com/2016-01-18-ansible-E5-85-A5-E9-97-A8</link>
        <guid isPermaLink="true">http://ninjacn.com/2016-01-18-ansible-E5-85-A5-E9-97-A8</guid>
      </item>
    
  </channel>
</rss>
